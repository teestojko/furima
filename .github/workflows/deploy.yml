name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # mainブランチへのpushでトリガーされる
  pull_request:
    branches:
      - main  # pull requestがmainブランチに対して行われた時

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # リポジトリのチェックアウト
    - name: Checkout code
      uses: actions/checkout@v2

    # PHP環境のセットアップ
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'  # 使用するPHPのバージョン

    # Composerのインストール
    - name: Install Composer dependencies
      run: |
        curl -sS https://getcomposer.org/installer | php
        php composer.phar install --working-dir=src

    # .envファイルのセットアップ
    - name: Set up .env
      run: |
        cp src/.env.example src/.env
        cd src
        php artisan key:generate

    # PHPUnitでテストの実行（任意）
    - name: Run tests
      run: |
        vendor/bin/phpunit

  deploy:
    runs-on: ubuntu-latest
    needs: build  # buildが成功した後にdeployを実行

    steps:
    # リポジトリのチェックアウト
    - name: Checkout code
      uses: actions/checkout@v2

    # SSHでEC2へデプロイ
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.EC2_SERVER_IP }}
        USERNAME: ${{ secrets.EC2_USERNAME }}
      run: |
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        ssh -i private_key.pem -o StrictHostKeyChecking=no $USERNAME@$SERVER_IP << 'EOF'
          cd /var/www  # EC2のデプロイ先ディレクトリ
          git pull origin main  # リモートリポジトリから最新のコードをプル
          composer install  # Composerで依存関係をインストール
          php artisan migrate --force  # マイグレーション実行
          php artisan config:cache  # 設定キャッシュ
          php artisan route:cache  # ルートキャッシュ
          php artisan view:cache  # ビューキャッシュ
        EOF
